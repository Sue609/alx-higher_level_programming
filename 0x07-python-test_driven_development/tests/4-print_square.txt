The print_square function prints a square with the character #.
The size if the length of the square. Size must always be an integer.
The function takes one arguement of integer type and does not accept floats.

Args:
	size (int): The length of the square.

Returns: 
	The function prints the square of size.

Example of tests:
	>>> print_square = __import__('4-print_square').print_square

	>>> print_square(2)
	##
	##

The function does not accept floats and strings only integers otherwise it raises errors:
	>>> print_square(2.5)
	Traceback (most recent call last):
	TypeError: size must be an integer

	>>> print_square("sue")
	Traceback (most recent call last):
	TypeError: size must be an integer

You must make sure to pass an arguement passing none will result in a typeerror
	>>> print_square(None)
	Traceback (most recent call last):
	TypeError: size must be an integer

Size must be greater than or equal to 0
	>>> print_square(-1)
	Traceback (most recent call last):
	ValueError: size must be >= 0

The type of arguement is checked first before the value of the arguement is checked
	>>> print_square(-10.8)
	Traceback (most recent call last):
	TypeError: size must be an integer

Atleast one arguement must be provided:
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

The function does not accept more than one arguement:
	>>> print_square(2, 3)
	Traceback (most recent call last):
	TypeError: print_square() takes 1 positional argument but 2 were given

If size passed to the function is 0, an error is printed to the console
	>>> print_size(0)
	Traceback (most recent call last):
	NameError: name 'print_size' is not defined
